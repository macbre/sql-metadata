# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # https://github.com/actions/python-versions/blob/main/versions-manifest.json
        # https://devguide.python.org/versions/#supported-versions
        python-version:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Load ~/.cache directory and Poetry .venv
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          .venv
        key: cache-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install Python wheel support to speed up things
      run: pip install wheel

    - name: Pre-install black
      run: pip install black

    # https://github.com/marketplace/actions/install-poetry-action
    - name: Install Poetry
      uses: snok/install-poetry@v1.3.4
      with:
        version: 1.3.2
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Poetry details
      run: |
        poetry --version
        poetry config --list

    - name: Install dependencies with poetry
      run: |
        poetry install --no-root
        poetry run python --version
        poetry show

    - name: Test with pytest
      run: make coverage

    # https://coveralls-python.readthedocs.io/en/latest/usage/index.html
    # upload coverage report for just one of Python version matrix runs
    - name: Upload coverage report to Coveralls
      if: matrix.python-version == '3.9'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: poetry run coveralls --service=github || true

    - name: Lint with pylint
      run: make lint

    - name: Build a distribution package
      run: poetry build -vvv
